// Generated by view binder compiler. Do not edit!
package com.example.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.example.learning.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AlphabetViewPagerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final ViewPager2 innerViewPager;

  @NonNull
  public final TextView txtCapital;

  @NonNull
  public final TextView txtSmall;

  private AlphabetViewPagerBinding(@NonNull ConstraintLayout rootView,
      @NonNull Guideline guideline2, @NonNull ViewPager2 innerViewPager,
      @NonNull TextView txtCapital, @NonNull TextView txtSmall) {
    this.rootView = rootView;
    this.guideline2 = guideline2;
    this.innerViewPager = innerViewPager;
    this.txtCapital = txtCapital;
    this.txtSmall = txtSmall;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AlphabetViewPagerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AlphabetViewPagerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.alphabet_view_pager, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AlphabetViewPagerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.guideline2;
      Guideline guideline2 = rootView.findViewById(id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.inner_view_pager;
      ViewPager2 innerViewPager = rootView.findViewById(id);
      if (innerViewPager == null) {
        break missingId;
      }

      id = R.id.txt_capital;
      TextView txtCapital = rootView.findViewById(id);
      if (txtCapital == null) {
        break missingId;
      }

      id = R.id.txt_small;
      TextView txtSmall = rootView.findViewById(id);
      if (txtSmall == null) {
        break missingId;
      }

      return new AlphabetViewPagerBinding((ConstraintLayout) rootView, guideline2, innerViewPager,
          txtCapital, txtSmall);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
