// Generated by view binder compiler. Do not edit!
package com.example.learning.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager2.widget.ViewPager2;
import com.example.learning.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAlphabetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton btnBack;

  @NonNull
  public final FloatingActionButton btnNext;

  @NonNull
  public final Guideline guideline4;

  @NonNull
  public final ViewPager2 viewpager;

  private FragmentAlphabetBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton btnBack, @NonNull FloatingActionButton btnNext,
      @NonNull Guideline guideline4, @NonNull ViewPager2 viewpager) {
    this.rootView = rootView;
    this.btnBack = btnBack;
    this.btnNext = btnNext;
    this.guideline4 = guideline4;
    this.viewpager = viewpager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAlphabetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAlphabetBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_alphabet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAlphabetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_back;
      FloatingActionButton btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_next;
      FloatingActionButton btnNext = rootView.findViewById(id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.guideline4;
      Guideline guideline4 = rootView.findViewById(id);
      if (guideline4 == null) {
        break missingId;
      }

      id = R.id.viewpager;
      ViewPager2 viewpager = rootView.findViewById(id);
      if (viewpager == null) {
        break missingId;
      }

      return new FragmentAlphabetBinding((ConstraintLayout) rootView, btnBack, btnNext, guideline4,
          viewpager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
